<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"] - emSentry</title>
    <link rel="icon" type="image/svg+xml" href="~/images/favicon.svg">

    <link rel="stylesheet" href="~/lib/bootstrap/dist/css/bootstrap.min.css" />
    <link rel="stylesheet" href="~/css/site.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/style.css" asp-append-version="true" />
    <link rel="preconnect"
          href="https://fonts.gstatic.com">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/css/bootstrap.min.css"
          rel="stylesheet"
          integrity="sha384-giJF6kkoqNQ00vy+HMDP7azOuL0xtbfIcaT9wjKHr8RbDVddVHyTfAAsrekwKmP1"
          crossorigin="anonymous">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.3/font/bootstrap-icons.min.css">
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">


    <link href="~/css/devextreme/dx.light.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css">
    <link href="https://fonts.googleapis.com/css2?family=Open+Sans:wght@300;400;800&display=swap"
          rel="stylesheet">
    <link rel="stylesheet" href="~/css/layout.css" asp-append-version="true" />
    <link rel="stylesheet" href="~/css/darkmode.css" asp-append-version="true" />

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.all.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <script src="./js/devextreme/jquery.js"></script>
    <script src="https://cdn3.devexpress.com/jslib/22.2.3/js/dx.all.js"></script>
    <script src="./js/devextreme/aspnet/dx.aspnet.mvc.js"></script>
    <script src="./js/devextreme/aspnet/dx.aspnet.data.js"></script>
    <script src="./js/webrtc/notificationchannel.js"></script>
    <script src="./js/webrtc/notification.js"></script>
    <script src="./js/webrtc/constants.js"></script>
    <script src="./js/webrtc/util.js"></script>
    <script src="./js/emsentry-utilities.js"></script>
    <script src="./js/mapTileManager.js"></script>

    <script>
        var msg = '@(TempData["ToastMessage"] ?? "")'; // Render the TempData value into JavaScript
        document.addEventListener("DOMContentLoaded", function () {
            if (!isNullOrEmpty(msg)) { // Check if the message is not empty
                DevExpress.ui.notify(msg, 'info', 2000);
            }
        });
        document.addEventListener("DOMContentLoaded", function () {
            if (sessionStorage.getItem('darkmodeEnabled') === 'true') {
                toggleDarkMode()
            }
        });

        function toggleDarkMode() {
            let isDarkModeEnabled = true;

            var htmlBody = document.body;
            if (htmlBody.classList.contains('dark-mode')) {
                isDarkModeEnabled = false;
            }
            sessionStorage.setItem('darkmodeEnabled', isDarkModeEnabled);
            htmlBody.classList.toggle("dark-mode");

            var jumbotrons = document.querySelectorAll('.jumbotron');
            jumbotrons.forEach(function (jumbotron) {
                jumbotron.classList.toggle('dark-mode-container');
            });
            var titles = document.querySelectorAll('.card-title');
            titles.forEach(function (title) {
               title.classList.toggle('dark-title');
            });
            var carousels = document.querySelectorAll('.carousel-dark');
            carousels.forEach(function (title) {
                title.classList.toggle('carousel-dark');
            });
            var toggleIcon = document.getElementById('toggleDarkModeIcon');
            toggleIcon.classList.toggle("bi-sun");
        }
    </script>
    <style>
        .sidebar-links {
            display: flex;
            flex-direction: column;
            justify-content: space-between;
            margin-top: 2rem;
        }
        .navbar {
            padding: 0;
            background: var( --palette-color7);
        }

        .hidden-navbar {
            display: none !important;
        }

        .brand-logo {
            background: var(--tile-body-color);
            border-radius: 5px;
            padding: 0.2rem;
            margin-left: 0.2rem;
        }

        .popup-form-notification {
            position: fixed;
            top: 50%;
            left: 50%;
            transform: translate(-50%, -50%);
            background-color: #f8f9fa;
            border-radius: 8px;
            box-shadow: 0 0 20px rgba(0,0,0,0.2);
            max-width: 400px;
            width: 100%;
            z-index: 1000;
        }

        .form-header {
            background-color: var(--primary-btn-color);
            color: white;
            padding: 15px;
            border-top-left-radius: 8px;
            border-top-right-radius: 8px;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }

        .form-header h3 {
            margin: 0;
            font-size: 1.2rem;
        }

        .close-btn {
            cursor: pointer;
            font-size: 1.5rem;
        }

        #send-notification-form {
            padding: 20px;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 5px;
            text-align: left;
        }

        .form-control {
            width: 100%;
            padding: 0.375rem 0.75rem;
            font-size: 1rem;
            line-height: 1.5;
            color: #495057;
            background-color: #fff;
            background-clip: padding-box;
            border: 1px solid #ced4da;
            border-radius: 0.25rem;
            transition: border-color 0.15s ease-in-out, box-shadow 0.15s ease-in-out;
        }

        .btn-notification {
            width: 100%;
            background-color: var(--primary-btn-color) !important;
            color: #fff;
        }

        .select2-container {
            width: 100% !important;
        }
        .footer-border {
            border-top: 2px var(--palette-color7) solid;
        }
        .footer-icon {
            color: var(--palette-color7);
            margin-left: 1rem;
        }
    </style>

</head>

<body>
    <header>
        <nav id="mainTopNavbar" class="navbar navbar-expand-sm navbar-toggleable-sm navbar-dark mb-3 fixed-top">
            <div class="container-fluid p-0">
                <div style="display:flex">
                    <button id="navIcon-toggleSidebar" class="txt--tile btn collapsedSideBar bg--color7" onclick="toggleSideBar()">
                        <span class="navbar-toggler-icon"></span>
                    </button>
                    @(Html.DevExtreme().Tooltip()
                        .Target("#navIcon-toggleSidebar").ShowEvent("mouseenter").HideEvent("mouseleave")
                        .ContentTemplate("Toggle Quick Actions"))
                    <a class="navbar-brand" asp-area="" asp-controller="Home" asp-action="Index" aria-label="Home">
                        <img class="brand-logo" src="./images/full-logo.png" alt="Logo" height="30">
                    </a>
                </div>
                <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target=".navbar-collapse" aria-controls="navbarSupportedContent"
                        aria-expanded="false" aria-label="Toggle navigation">
                    <span class="navbar-toggler-icon"></span>
                </button>
                <div class="navbar-collapse collapse d-sm-inline-flex justify-content-end">
                    <ul class="navbar-nav">
                        <button class="btn" onclick="toggleDarkMode()"><i id="toggleDarkModeIcon" class="bi bi-moon text-white"></i></button>
                        <li class="nav-item dropdown">
                            <a class="nav-link dropdown-toggle text-light d-flex align-items-center" href="#" id="userMenu" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                                <span>Help</span>
                            </a>
                            <ul class="dropdown-menu dropdown-menu-end" aria-labelledby="userMenu">
                                <li>
                                    <a id="navIcon-Help" class="dropdown-item" asp-area="" asp-controller="HelpPage" asp-action="Index">
                                        <i class="bi bi-question-circle-fill me-2"></i> View Help & FAQs
                                    </a>
                                    @(Html.DevExtreme().Tooltip()
                                        .Target("#navIcon-Help").ShowEvent("mouseenter").HideEvent("mouseleave")
                                        .ContentTemplate("Help"))
                                </li>
                                <hr class="dropdown-divider"/>
                                <li>
                                    <a id="navIcon-About" class="dropdown-item" asp-area="" asp-controller="About" asp-action="Index">
                                        <i class="bi bi-info-circle-fill me-2"></i> About emSentry
                                    </a>
                                    @(Html.DevExtreme().Tooltip()
                                        .Target("#navIcon-About").ShowEvent("mouseenter").HideEvent("mouseleave")
                                        .ContentTemplate("About"))
                                </li>
                            </ul>
                        </li>
                        <partial name="_LoginPartial" />
                    </ul>
                </div>
            </div>
        </nav>
    </header>

    <div id="notification-form" class="popup-form-notification" style="display: none;">
        <div class="form-header">
            <h3>Send Notification</h3>
            <span class="close-btn">&times;</span>
        </div>
        <form id="send-notification-form">
            <div class="form-group">
                <label for="notification-title">Title:</label>
                <textarea id="notification-title" rows="1" class="form-control" placeholder="Enter title" required></textarea>
            </div>
            <div class="form-group">
                <label for="notification-message">Message:</label>
                <textarea id="notification-message" class="form-control" rows="2" placeholder="Enter message" required></textarea>
            </div>
            <input type="hidden" id="hidden-device-id-notification" name="deviceId">
            <input type="hidden" id="hidden-group-id-notification" name="groupId">
            <button type="submit" class="btn btn-notification">Send Notification</button>
        </form>
    </div>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            var closeBtn = document.querySelector('.close-btn');
            var form = document.getElementById('notification-form');

            closeBtn.addEventListener('click', closeForm);
            form.addEventListener('click', function (event) {
                if (event.target == this) {
                    closeForm();
                }
            });

            function closeForm() {
                form.style.display = 'none';
            }

            document.getElementById('send-notification-form').addEventListener('submit', function (e) {
                e.preventDefault();
                var deviceId = document.getElementById('hidden-device-id-notification').value;
                var groupId = document.getElementById('hidden-group-id-notification').value;
                var title = document.getElementById('notification-title').value;
                var message = document.getElementById('notification-message').value;

                fetch('/Message/SendMessage', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({
                        deviceIds: deviceId ? [deviceId] : [],
                        groupIds: groupId ? [groupId] : [],
                        title: title,
                        message: message
                    })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            Swal.fire({
                                title: "Success!",
                                text: "Notification sent successfully",
                                icon: "success",
                                confirmButtonColor: "#3085d6",
                                timer: 3000,
                                timerProgressBar: true,
                                showConfirmButton: false
                            });
                            closeForm();
                        } else {
                            Swal.fire({
                                title: "Error",
                                text: "Error sending notification",
                                icon: "error",
                                confirmButtonColor: "#3085d6",
                                timer: 3000,
                                timerProgressBar: true,
                                showConfirmButton: false
                            });
                        }
                    })
                    .catch((error) => {
                        alert('Error sending notification');
                    });
            });
        });

    </script>
    <audio id="alertSound" src="../../audio/gomeetalert.mp3"></audio>

    <div id="divBodyContainer" class="container" style="margin-top: 1rem; width:100%">
        <partial name="_SideNavPartial" />
        <main id="mainBodyContainer" role="main" class="mt-4" style="margin-left: 50px">
            @RenderBody()
        </main>
        <iframe src="about:blank" id="alertHeader" name="alertHeader" title="Support Calls" aria-live="polite" style="height:110px; display: none; color-scheme: normal; max-height: 100%; transition: all 0.25s ease 0s; bottom: 8px; right: 24px; width: 400px; background: rgb(255, 255, 255); outline: transparent solid 3px; box-shadow: rgba(0, 0, 0, 0.14) 0px 16px 24px 2px, rgba(0, 0, 0, 0.12) 0px 6px 30px 5px, rgba(0, 0, 0, 0.2) 0px 8px 10px -5px; position: fixed; border: none; border-radius: 8px; z-index: 1000;"></iframe>
    </div>
    <br />
    <br />
    <footer style="height: 50px; width: 100%; color: var(--palette-color7);position:absolute;bottom:0px">
        <div class="container d-flex justify-content-between align-items-center footer-border">

            <p class="mb-0">Copyright © 2024 MDMtoGO. All Rights Reserved.</p>
            <div class="d-flex align-items-center" style="font-size: 1.2rem;">
                <a class="nav-link footer-icon" style="" href="https://emsentry.com" target="_blank"><i class="bi bi-info-circle-fill"></i></a>
                <a class="nav-link footer-icon" href="https://m.facebook.com/MDMtoGOInc" target="_blank"><i class="bi bi-facebook"></i></a>
                <a class="nav-link footer-icon" href="https://www.instagram.com/mdmtogoinc/" target="_blank"><i class="bi bi-instagram"></i></a>
                <a class="nav-link footer-icon" href="https://www.youtube.com/@@emSentry" target="_blank"><i class="bi bi-youtube"></i></a>
                <a class="nav-link footer-icon" href="https://ca.linkedin.com/company/emsentry" target="_blank"><i class="bi bi-linkedin"></i></a>
            </div>
        </div>
    </footer>

    <script src="./lib/jquery/dist/jquery.min.js"></script>
    <script src="./lib/bootstrap/dist/js/bootstrap.bundle.min.js"></script>
    <script src="./js/site.js" asp-append-version="true"></script>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.0.0-beta1/dist/js/bootstrap.bundle.min.js"
            integrity="sha384-ygbV9kiqUc6oa4msXn9868pTtWMgiQaeYH7/t7LECLbyPA2x65Kgf80OJFdroafW"
            crossorigin="anonymous">
    </script>

    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

    <script>

        var token = '@token';
        var rcUrl = '@websocketUrl';
        var adminUserId = '@Html.Raw(adminUserId)';
        var refreshTask;

        function signOut() {
            if ('True' === islogin) {
                window.location.href = '/Home/Logout';
            }
        }

        function refreshToken() {
            if (!token) {
                console.error('Token not available');
                return;
            }

            fetch('/TokenRefresh/refresh', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'Authorization': 'Bearer ' + encodeURIComponent(token) // Include the token in the Authorization header
                },
            })
                .then(response => {
                    if (response.ok) {
                        return response.json();
                    } else {
                        console.error('Failed to refresh token');
                        clearInterval(refreshTask);
                        signOut();
                    }
                })
                .then(data => {
                    //console.log(new Date().toLocaleTimeString() + " : Token refreshed: ", data);
                    var msg = parseJSON(JSON.stringify(data));
                    token = msg.newToken;
                    console.log(new Date().toLocaleTimeString() + " : new refreshed token : ", token);
                })
                .catch(error => {
                    console.error('Token refresh error:', error);
                    clearInterval(refreshTask);
                    signOut();
                });
        }

        if (token) {
            var refreshInterval = '@refreshInterval';
            console.log('token refreshe internval from setting: ' + refreshInterval);
            if (refreshInterval == 0 || refreshInterval == null) {
                refreshInterval = 45;
            }
            console.log('Final token refreshe internval: ' + refreshInterval);
            refreshTask = setInterval(refreshToken, refreshInterval * 60 * 1000);
        }
        else {
            signOut();
        }

        var rcNotifiller;
        var calls = [];

        function playAlertSound() {
            var audio = document.getElementById('alertSound');
            audio.play();
        }

        function handleUnauthorized(msg) {
            console.log("Get unauthorized message: " + msg);
            signOut();
        }

        function handleCall(callInfo) {
            calls.push(callInfo);
            showAlert();
            playAlertSound();
        }

        function handleBatchCall(batchCalls) {
            batchCalls.forEach(call => {
                //console.log('handleBatchCallSweet group id: ' + call.groupId);
                var info = {
                    roomId: call.roomId,
                    peerName: call.peerName,
                    groupId: call.groupId
                };
                calls.push(info);
                //console.log('handleBatchCallSweet 2: ' + info.peerName);
            });
            showAlert();
            playAlertSound();
        }

        function handleCallCancel(info) {

            for (var len = calls.length - 1; len >= 0; len--) {
                if (calls[len].roomId === info.roomId) {
                    calls.splice(len, 1);
                }
            }
            if (calls.length === 0) {
                hideAlert();
            }
            else {
                showAlert();
            }
        }

        function hideAlert() {
            document.getElementById('alertHeader').style.display = 'none';
        }

        function showAlert() {
            var callText;
            if (calls.length == 0) {
                document.getElementById('alertHeader').style.display = 'none';
                return;
            } else if (calls.length === 1) {
                var callInfo = calls[0];
                callText = callInfo.peerName + ' is calling ...';
            } else {
                callText = 'There are ' + calls.length + ' calls waiting...';
            }

            var footerHtml = calls.map(function (call, index) {
                return `
                                    <div style="display:flex;">
                                        <div style="width:55%; overflow-wrap:anywhere">
                                            <span>${call.peerName}</span>
                                        </div>
                                        <div style="width:45%; text-align:right;">
                                            <button class="btn btn-danger btn-sm" id="reject-${call.roomId}">Reject</button>
                                            <button class="btn btn-success btn-sm" id="accept-${call.roomId}">Accept</button>
                                        </div>
                                    </div>
                                   ${index < calls.length - 1 ? '<hr style="height:1px;border-width:0;color:gray;background-color:gray">' : ''}
                                `;
            }).join('');

            var alertContent = `
                                 <div class="alert alert-warning" role="alert" style="margin-bottom:0px">
                                    <h6 class="alert-heading">${callText}</h6>
                                    <hr style="height:2px;border-width:0;color:gray;background-color:gray">
                                    <div>${footerHtml}</div>
                                 </div>
                            `;

            var iframe = document.getElementById('alertHeader');
            var iframeDoc = iframe.contentDocument || iframe.contentWindow.document;

            iframeDoc.open();
            iframeDoc.write('<html><head><link href="https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css" rel="stylesheet"></head><body>' + alertContent + '</body></html>');
            iframeDoc.close();

            iframe.style.display = 'block';
            if (calls.length === 1) {
                iframe.style.overflowY = 'hidden';
                iframe.style.height = '110px';
            } else if (calls.length === 2) {
                iframe.style.overflowY = 'scroll';
                iframe.style.height = '170px';
            } else if (calls.length === 3) {
                iframe.style.overflowY = 'scroll';
                iframe.style.height = '230px';
            } else {
                iframe.style.overflowY = 'scroll';
                iframe.style.height = '300px';
            }

            calls.forEach(function (call) {
                iframeDoc.getElementById(`reject-${call.roomId}`).addEventListener('click', function (event) {
                    console.log(`Call from ${call.peerName} rejected`);
                    removeCall(call.roomId);
                });

                iframeDoc.getElementById(`accept-${call.roomId}`).addEventListener('click', function (event) {
                    var url = "../../gomeetrc.html?RoomId=" + call.roomId + "&GroupId=" + call.groupId + "&RcUrl=" + rcUrl + "&Token=" + token;
                    window.open(url, '_blank');
                });
            });
        }

        function removeCall(roomId) {
            calls = calls.filter(call => call.roomId !== roomId);
            rcNotifiller.rejectCall(roomId, groupId);
            showAlert();
        }

        var islogin = '@login';
        var groupId = '@groupId';

        if ('True' === islogin && "" !== groupId) {
            rcNotifiller = new GoNotification(rcUrl, groupId, token, adminUserId);
        }

        document.addEventListener('visibilitychange', function () {
            if (document.visibilityState === 'visible') {
                showAlert();
            }
        });
    </script>

    @await RenderSectionAsync("Styles", required: false)
    @await RenderSectionAsync("Scripts", required: false)


    @if (TempData["AlertMessage"] != null)
    {
        <script type="text/javascript">
            Swal.fire({
                title: "Max Number of Licenses Reached!",
                text: "Cannot enroll another device for this enterprise",
                icon: "warning",
                showCloseButton: true
            }).then((result) => {
                $.ajax({
                    url: '@Url.Action("CreateLog", "EventLog")',
                    type: 'POST',
                    data: {message: "@TempData["AlertMessage"]" }
                });

            })
        </script>
    }
    <script>
        function toTitleCase(str, replaceUnderscore=false) {
            if (replaceUnderscore) {
                str = str.replace(/_/g, ' ')
            }
            return str.replace(
                /\w\S*/g,
                function (txt) {
                    return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();
                }
            );
        }

        function capitalizeFirstLetter(str) {
            if (!str) return str; // Check if the string is empty or undefined
            return str.charAt(0).toUpperCase() + str.slice(1);
        }

        let firstToggleClick = true;
        document.querySelector('.navbar-toggler').addEventListener('click', function () {
            if (firstToggleClick) {
                firstToggleClick = false; // Skip the first click
                return;
            }
            var navbarCollapse = document.querySelector('.navbar-collapse');
            navbarCollapse.classList.toggle('hidden-navbar');
        });
    </script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-app.js"></script>
    <script src="https://www.gstatic.com/firebasejs/8.10.0/firebase-messaging.js"></script>
    <script type="module" src="./js/firebase-init.js"></script>
</body>
</html>
